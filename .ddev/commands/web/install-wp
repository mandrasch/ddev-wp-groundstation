#!/bin/bash

## Description: Install fresh wordpress with updraftplus
## Usage: install-wp
## Example: "ddev install-wp <de_DE>"

if [ -z "$1" ]
  then
    # if no locale is provided, ask user if he/she really wants to use en_US
    WP_LOCALE_DEFAULT="en_US"
    read -p "Okay to use locale en_US? [$WP_LOCALE_DEFAULT]: " WP_LOCALE_INPUT
    WP_LOCALE="${WP_LOCALE_INPUT:-$WP_LOCALE_DEFAULT}"
  else
    # if user provided a locale, just set it
    WP_LOCALE="${1}"
fi

# We use a subdirectory in DDEV container, see "docroot" in .ddev/config.yaml
mkdir -p /var/www/html/wordpress

# Working directory
cd /var/www/html/wordpress

echo "Installing fresh wordpress with ${WP_LOCALE} ..."
wp core download --locale=${WP_LOCALE}
wp config create --dbname=db --dbuser=db --dbpass=db --dbhost=db
wp core install --url=${DDEV_PRIMARY_URL} --title=FreshPlainWordpress --admin_user=admin --admin_email=admin@pullwp.nohost

# disable automatic updates for the local instance
wp config set AUTOMATIC_UPDATER_DISABLED true --raw

# set debug values for local development
# TODO: figure out if this slows down the restore process?
# wp config set WP_DEBUG true --raw
# wp config set WP_DEBUG_LOG true --raw
# wp config set WP_DEBUG_DISPLAY false --raw

# TODO: Cache it to avoid unnecessary data transfer?
echo "Downloading updraftplus plugin as zip (needed for premium addons)..."
wget https://updraftplus.com/wp-content/uploads/updraftplus.zip
echo "Installing and activating it..."
wp plugin install updraftplus.zip --activate
rm updraftplus.zip

wp user update admin --prompt=user_pass

echo "Fresh wordpress with updraftplus installed at ${DDEV_PRIMARY_URL} - nice!"
echo "Next step: Activate your updraftplus premium license / CLI and Migrator plugin here:"
echo "${DDEV_PRIMARY_URL}/wp-admin/options-general.php?page=updraftplus"
echo "[You can launch your website with ddev launch from commandline]"
echo "Do not forget to run 'ddev create-local-backup' after updraftplus activation."
